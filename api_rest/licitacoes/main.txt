from typing import Any, List, Union

from fastapi import FastAPI, HTTPException
from pydantic import BaseModel

app = FastAPI()


class Item(BaseModel):
    name: str
    description: Union[str, None] = None
    price: float
    tax: Union[float, None] = None
    tags: List[str] = []

db = []

@app.post("/items/", status_code=201, response_model=Item)
async def create_item(item: Item) -> Any:
    db.append(item)
    return item


#@app.get("/items/{item_name}", response_model=Item)
#async def read_item(item_name: str):
#    for item in db:
#        if item.name == item_name:
#            return item
#    raise HTTPException(status_code=404, detail="Item not found")


#@app.get("/items/all", response_model=List[Item])
#async def read_all_items(all: List[Item]):
#    return all

@app.get("/all", response_model=List[Item])
async def get_all_posts():
    return db 